name: Build and deploy Node.js project to Azure Function App - tabarnam-xai

on:
  push:
    branches: [ main ]
  workflow_dispatch:

env:
  AZURE_FUNCTIONAPP_PACKAGE_PATH: './api'
  NODE_VERSION: '20.x'

jobs:
  build:
    runs-on: ubuntu-latest
    permissions:
      contents: read

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Node
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}

      - name: Ensure package.json (Functions)
        run: |
          cd ${{ env.AZURE_FUNCTIONAPP_PACKAGE_PATH }}
          if [ ! -f package.json ]; then
            echo '{"name":"xai-functions","version":"1.0.0","type":"module","dependencies":{"@azure/functions":"^4.4.0","axios":"^1.7.0","@azure/cosmos":"^4.2.0"}}' > package.json
          else
            node -e "let p=require('./package.json'); p.type='module'; p.dependencies=p.dependencies||{}; p.dependencies['@azure/functions']=p.dependencies['@azure/functions']||'^4.4.0'; p.dependencies['axios']=p.dependencies['axios']||'^1.7.0'; p.dependencies['@azure/cosmos']=p.dependencies['@azure/cosmos']||'^4.2.0'; require('fs').writeFileSync('package.json', JSON.stringify(p,null,2));"
          fi

      - name: Install deps (Functions)
        run: |
          cd ${{ env.AZURE_FUNCTIONAPP_PACKAGE_PATH }}
          npm ci || npm install

      - name: Zip artifact
        run: |
          cd ${{ env.AZURE_FUNCTIONAPP_PACKAGE_PATH }}
          zip -r ../release.zip . -x "*.git*"

      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: functions-package
          path: release.zip

  deploy:
    runs-on: ubuntu-latest
    needs: build
    permissions:
      id-token: write
      contents: read

    steps:
      - name: Download artifact
        uses: actions/download-artifact@v4
        with:
          name: functions-package
          path: .

      - name: Unzip
        run: unzip -o release.zip -d ./deployed

      - name: Azure Login (OIDC)
        uses: azure/login@v2
        with:
          client-id: ${{ secrets.AZURE_CLIENT_ID }}
          tenant-id: ${{ secrets.AZURE_TENANT_ID }}
          subscription-id: ${{ secrets.AZURE_SUBSCRIPTION_ID }}

      - name: Deploy to Function App
        uses: Azure/functions-action@v1
        with:
          app-name: 'tabarnam-xai-dedicated'
          slot-name: 'Production'
          package: './deployed'
