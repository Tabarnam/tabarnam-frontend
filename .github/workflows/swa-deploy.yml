name: SWA Deploy (OIDC)

on:
  push:
    branches: [ main ]
  workflow_dispatch:

permissions:
  id-token: write
  contents: read

jobs:
  deploy:
    runs-on: ubuntu-latest
    env:
      RG_NAME: tabarnam-mvp-rg
      SWA_NAME: tabarnam-frontend

    steps:
      - uses: actions/checkout@v4

      - uses: actions/setup-node@v4
        with:
          node-version: "20.x"
          cache: "npm"

      - name: Install & Build (Vite)
        run: |
          npm ci || npm i
          npm run build

      - name: Azure login (OIDC)
        uses: azure/login@v2
        with:
          client-id: ${{ secrets.AZURE_CLIENT_ID }}
          tenant-id: ${{ secrets.AZURE_TENANT_ID }}
          subscription-id: ${{ secrets.AZURE_SUBSCRIPTION_ID }}

      - name: Who am I (debug)
        run: az account show --query "{tenantId:tenantId, subscription:id, user:user.name}"

      # === token + debug ===
      - name: Fetch SWA deployment token
        id: swa_token
        run: |
          TOKEN=$(az staticwebapp secrets list -g "$RG_NAME" -n "$SWA_NAME" --query properties.apiKey -o tsv)
          echo "::add-mask::$TOKEN"
          echo "token=${TOKEN}" >> "$GITHUB_OUTPUT"

      - name: "Debug: token length & hash (masked)"
        env:
          TOKEN: ${{ steps.swa_token.outputs.token }}
        run: |
          echo "Token length: ${#TOKEN}"
          printf "%s" "$TOKEN" | sha256sum | cut -c1-12 | xargs echo "sha256 prefix:"

      - name: "Debug: SWA identity"
        run: |
          az staticwebapp show -g "$RG_NAME" -n "$SWA_NAME" \
            --query "{name:name, id:id, host:defaultHostname, location:location}" -o tsv

      # === deploy via SWA CLI (token-based) ===
      - name: Install SWA CLI
        run: npm i -g @azure/static-web-apps-cli

      # We only deploy static assets from dist; your API is a separate Function App.
      - name: Deploy (swa deploy)
        env:
          TOKEN: ${{ steps.swa_token.outputs.token }}
        run: |
          swa --version
          swa deploy ./dist \
            --deployment-token "$TOKEN" \
            --env production
          # Notes:
          # - No api upload here (your backend lives in tabarnam-xai-dedicated)
          # - If you later add managed functions, add: --api-location api

      - name: Post-deploy health check (non-fatal)
        run: |
          HOST=$(az staticwebapp show -g "$RG_NAME" -n "$SWA_NAME" --query defaultHostname -o tsv)
          echo "Host: https://$HOST"
          echo "Home page ping:"
          curl -sS --retry 5 --retry-delay 5 "https://$HOST" | head -c 200 || true
          echo
          echo "Proxy smoke test:"
          curl -sS -X POST "https://$HOST/api/proxy-xai" \
               -H "Content-Type: application/json" \
               -d '{"queryType":"product_keyword","query":"gelato machine","limit":1}' || true
